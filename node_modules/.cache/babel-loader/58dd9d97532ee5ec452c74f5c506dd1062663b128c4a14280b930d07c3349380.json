{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flyin\\\\Desktop\\\\dashboard-app\\\\src\\\\components\\\\WidgetModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WidgetModal = ({\n  isOpen,\n  onClose,\n  categories,\n  setCategories\n}) => {\n  _s();\n  const [activeCategory, setActiveCategory] = useState(categories[0]); // Default to the first category\n\n  if (!isOpen) return null;\n  const handleCategoryClick = category => {\n    setActiveCategory(category); // Update the active category when clicked\n  };\n  const handleCheckBoxChange = widgetId => {\n    const updatedCategories = categories.map(category => {\n      if (category.id === activeCategory.id) {\n        // For the active category, update the widget\n        const updatedWidgets = category.widgets.map(widget => {\n          if (widget.id === widgetId) {\n            return {\n              ...widget,\n              showit: !widget.showit // Toggle the showit property\n            };\n          }\n          return widget;\n        });\n        return {\n          ...category,\n          widgets: updatedWidgets // Update widgets of the active category\n        };\n      }\n      return category; // No change to other categories\n    });\n\n    // Update the categories state\n    setCategories(updatedCategories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Widget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"u\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-tabs\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-tab ${activeCategory.id === category.id ? \"active\" : \"\"}`,\n          onClick: () => handleCategoryClick(category),\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-list\",\n        children: activeCategory.widgets.map(widget => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCheckBoxChange(widget.id),\n            checked: widget.showit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: widget.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, widget.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(WidgetModal, \"seEyuOLJ+Vu3WTxSIGDtj31mhcQ=\");\n_c = WidgetModal;\nexport default WidgetModal;\nvar _c;\n$RefreshReg$(_c, \"WidgetModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WidgetModal","isOpen","onClose","categories","setCategories","_s","activeCategory","setActiveCategory","handleCategoryClick","category","handleCheckBoxChange","widgetId","updatedCategories","map","id","updatedWidgets","widgets","widget","showit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","type","onChange","checked","_c","$RefreshReg$"],"sources":["C:/Users/flyin/Desktop/dashboard-app/src/components/WidgetModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst WidgetModal = ({ isOpen, onClose, categories, setCategories }) => {\r\n  const [activeCategory, setActiveCategory] = useState(categories[0]); // Default to the first category\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setActiveCategory(category); // Update the active category when clicked\r\n  };\r\n\r\n  const handleCheckBoxChange = (widgetId) => {\r\n    const updatedCategories = categories.map((category) => {\r\n        if (category.id === activeCategory.id) {\r\n          // For the active category, update the widget\r\n          const updatedWidgets = category.widgets.map((widget) => {\r\n            if (widget.id === widgetId) {\r\n              return {\r\n                ...widget,\r\n                showit: !widget.showit, // Toggle the showit property\r\n              };\r\n            }\r\n            return widget;\r\n          });\r\n          return {\r\n            ...category,\r\n            widgets: updatedWidgets, // Update widgets of the active category\r\n          };\r\n        }\r\n        return category; // No change to other categories\r\n      });\r\n  \r\n      // Update the categories state\r\n      setCategories(updatedCategories);\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h2>Add Widget</h2>\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tabs for categories */}\r\n        u\r\n        <div className=\"category-tabs\">\r\n          {categories.map((category) => (\r\n            <button\r\n              key={category.id}\r\n              className={`category-tab ${\r\n                activeCategory.id === category.id ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleCategoryClick(category)}\r\n            >\r\n              {category.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Widget list for the active category */}\r\n        <div className=\"widget-list\">\r\n          {activeCategory.widgets.map((widget) => (\r\n            <div key={widget.id} className=\"widget-item\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => handleCheckBoxChange(widget.id)}\r\n                checked={widget.showit}\r\n              />\r\n              <span>{widget.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}