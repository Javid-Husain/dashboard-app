{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flyin\\\\Desktop\\\\dashboard-app\\\\src\\\\components\\\\WidgetModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AddWidgetForm from \"./AddWidgetForm\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WidgetModal = ({\n  isOpen,\n  onClose,\n  categories,\n  setCategories\n}) => {\n  _s();\n  const [activeCategory, setActiveCategory] = useState(categories[0]); // Default to the first category\n  const kcategories = useSelector(state => state.dashboard.categories);\n  useEffect(() => {\n    setCategories(kcategories);\n  }, [kcategories]);\n  if (!isOpen) return null;\n  const handleCategoryClick = category => {\n    setActiveCategory(category); // Update the active category when clicked\n  };\n  const handleCheckBoxChange = widgetId => {\n    const updatedCategories = categories.map(category => {\n      if (category.id === activeCategory.id) {\n        // For the active category, update the widget\n        const updatedWidgets = category.widgets.map(widget => {\n          if (widget.id === widgetId) {\n            return {\n              ...widget,\n              showit: !widget.showit // Toggle the showit property\n            };\n          }\n          return widget;\n        });\n        return {\n          ...category,\n          widgets: updatedWidgets // Update widgets of the active category\n        };\n      }\n      return category; // No change to other categories\n    });\n\n    // Update the categories state\n    setCategories(updatedCategories);\n    const updatedActiveCategory = updatedCategories.find(category => category.id === activeCategory.id);\n    setActiveCategory(updatedActiveCategory);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Widget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-tabs\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-tab ${activeCategory.id === category.id ? \"active\" : \"\"}`,\n          onClick: () => handleCategoryClick(category),\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-list\",\n        children: [activeCategory.widgets.map(widget => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCheckBoxChange(widget.id),\n            checked: widget.showit || false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: widget.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, widget.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(AddWidgetForm, {\n          categoryId: activeCategory.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(WidgetModal, \"cf1HtM9e/lt/dLdUhdcNF2+kFac=\", false, function () {\n  return [useSelector];\n});\n_c = WidgetModal;\nexport default WidgetModal;\nvar _c;\n$RefreshReg$(_c, \"WidgetModal\");","map":{"version":3,"names":["React","useEffect","useState","AddWidgetForm","useSelector","jsxDEV","_jsxDEV","WidgetModal","isOpen","onClose","categories","setCategories","_s","activeCategory","setActiveCategory","kcategories","state","dashboard","handleCategoryClick","category","handleCheckBoxChange","widgetId","updatedCategories","map","id","updatedWidgets","widgets","widget","showit","updatedActiveCategory","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","type","onChange","checked","categoryId","_c","$RefreshReg$"],"sources":["C:/Users/flyin/Desktop/dashboard-app/src/components/WidgetModal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AddWidgetForm from \"./AddWidgetForm\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst WidgetModal = ({ isOpen, onClose, categories, setCategories }) => {\r\n  const [activeCategory, setActiveCategory] = useState(categories[0]); // Default to the first category\r\n  const kcategories = useSelector((state) => state.dashboard.categories);\r\n\r\nuseEffect(() => {\r\n    setCategories(kcategories);\r\n  }, [kcategories]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setActiveCategory(category); // Update the active category when clicked\r\n  };\r\n\r\n  const handleCheckBoxChange = (widgetId) => {\r\n    const updatedCategories = categories.map((category) => {\r\n        if (category.id === activeCategory.id) {\r\n          // For the active category, update the widget\r\n          const updatedWidgets = category.widgets.map((widget) => {\r\n            if (widget.id === widgetId) {\r\n              return {\r\n                ...widget,\r\n                showit: !widget.showit, // Toggle the showit property\r\n              };\r\n            }\r\n            return widget;\r\n          });\r\n          return {\r\n            ...category,\r\n            widgets: updatedWidgets, // Update widgets of the active category\r\n          };\r\n        }\r\n        return category; // No change to other categories\r\n      });\r\n  \r\n      // Update the categories state\r\n      setCategories(updatedCategories);\r\n\r\n      const updatedActiveCategory = updatedCategories.find(\r\n        (category) => category.id === activeCategory.id\r\n      );\r\n      \r\n      setActiveCategory(updatedActiveCategory);\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h2>Add Widget</h2>\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tabs for categories */}\r\n        <div className=\"category-tabs\">\r\n          {categories.map((category) => (\r\n            <button\r\n              key={category.id}\r\n              className={`category-tab ${\r\n                activeCategory.id === category.id ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleCategoryClick(category)}\r\n            >\r\n              {category.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Widget list for the active category */}\r\n        <div className=\"widget-list\">\r\n          {activeCategory.widgets.map((widget) => (\r\n            <div key={widget.id} className=\"widget-item\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => handleCheckBoxChange(widget.id)}\r\n                checked={widget.showit || false} \r\n              />\r\n              <span>{widget.name}</span>\r\n            </div>\r\n          ))}\r\n          <AddWidgetForm categoryId={activeCategory.id} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}