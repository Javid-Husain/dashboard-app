{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdjav\\\\Downloads\\\\Telegram Desktop\\\\dashboard-app\\\\dashboard-app\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Widget from \"./Widget\";\nimport AddWidgetModal from \"./WidgetModal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const categoriesFromStore = useSelector(state => state.dashboard.categories);\n  const [categories, setCategories] = useState(categoriesFromStore);\n  const [filteredCategories, setFilteredCategories] = useState([]);\n\n  // Update categories state when Redux store changes\n  useEffect(() => {\n    setCategories(categoriesFromStore);\n  }, [categoriesFromStore]);\n\n  // Filter widgets whenever categories or searchTerm changes\n  useEffect(() => {\n    const filtered = categories.map(category => ({\n      ...category,\n      widgets: category.widgets.filter(widget => {\n        return widget.name.toLowerCase().includes(searchTerm.toLowerCase()) && widget.showit === true;\n      })\n    }));\n    setFilteredCategories(filtered);\n  }, [searchTerm, categories]);\n\n  // Handle opening and closing modal\n  const handleClick = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search widgets...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), filteredCategories.filter(category => category.widgets.length > 0) // Only render categories that have widgets\n    .map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [category.widgets.map(widget => /*#__PURE__*/_jsxDEV(Widget, {\n          widget: widget,\n          categoryId: category.id\n        }, widget.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"widget\",\n          onClick: handleClick,\n          children: \"Add Widget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddWidgetModal, {\n        isOpen: isModalOpen,\n        onClose: handleCloseModal,\n        categories: categories,\n        setCategories: setCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, category.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)), filteredCategories.every(category => category.widgets.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No widgets match your search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"hqP4BMFk2KIwNUu35aceQXXQoeY=\", false, function () {\n  return [useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Widget","AddWidgetModal","jsxDEV","_jsxDEV","Dashboard","_s","searchTerm","setSearchTerm","isModalOpen","setIsModalOpen","categoriesFromStore","state","dashboard","categories","setCategories","filteredCategories","setFilteredCategories","filtered","map","category","widgets","filter","widget","name","toLowerCase","includes","showit","handleClick","handleCloseModal","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","length","categoryId","id","onClick","isOpen","onClose","every","_c","$RefreshReg$"],"sources":["C:/Users/mdjav/Downloads/Telegram Desktop/dashboard-app/dashboard-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Widget from \"./Widget\";\r\nimport AddWidgetModal from \"./WidgetModal.js\";\r\n\r\nconst Dashboard = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const categoriesFromStore = useSelector((state) => state.dashboard.categories);\r\n  const [categories, setCategories] = useState(categoriesFromStore);\r\n  const [filteredCategories, setFilteredCategories] = useState([]);\r\n\r\n  // Update categories state when Redux store changes\r\n  useEffect(() => {\r\n    setCategories(categoriesFromStore);\r\n  }, [categoriesFromStore]);\r\n\r\n  // Filter widgets whenever categories or searchTerm changes\r\n  useEffect(() => {\r\n    const filtered = categories.map((category) => ({\r\n      ...category,\r\n      widgets: category.widgets.filter((widget) => {\r\n        return (\r\n          widget.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n          widget.showit === true\r\n        );\r\n      }),\r\n    }));\r\n    setFilteredCategories(filtered);\r\n  }, [searchTerm, categories]);\r\n\r\n  // Handle opening and closing modal\r\n  const handleClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Search Input */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search widgets...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n\r\n      {/* Render only categories with matching widgets */}\r\n      {filteredCategories\r\n        .filter((category) => category.widgets.length > 0) // Only render categories that have widgets\r\n        .map((category) => (\r\n          <div key={category.id} className=\"category\">\r\n            <h2>{category.name}</h2>\r\n            <div className=\"widgets\">\r\n              {category.widgets.map((widget) => (\r\n                <Widget\r\n                  key={widget.id}\r\n                  widget={widget}\r\n                  categoryId={category.id}\r\n                />\r\n              ))}\r\n              <button className=\"widget\" onClick={handleClick}>Add Widget</button>\r\n            </div>\r\n\r\n            <AddWidgetModal\r\n              isOpen={isModalOpen}\r\n              onClose={handleCloseModal}\r\n              categories={categories}\r\n              setCategories={setCategories}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n      {/* Show a message if no widgets match the search */}\r\n      {filteredCategories.every((category) => category.widgets.length === 0) && (\r\n        <p>No widgets match your search.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}