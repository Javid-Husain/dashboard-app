{"ast":null,"code":"// src/redux/dashboardSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport dashboardData from '../data/dashboardData';\nconst dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: dashboardData,\n  reducers: {\n    addWidget: (state, action) => {\n      const {\n        categoryId,\n        widget\n      } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      category.widgets.push(widget);\n    },\n    removeWidget: (state, action) => {\n      const {\n        categoryId,\n        widgetId\n      } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      category.widgets = category.widgets.filter(widget => widget.id !== widgetId);\n    },\n    updateWidget: (state, action)\n  }\n});\nexport const {\n  addWidget,\n  removeWidget\n} = dashboardSlice.actions;\nexport default dashboardSlice.reducer;","map":{"version":3,"names":["createSlice","dashboardData","dashboardSlice","name","initialState","reducers","addWidget","state","action","categoryId","widget","payload","category","categories","find","cat","id","widgets","push","removeWidget","widgetId","filter","updateWidget","actions","reducer"],"sources":["C:/Users/flyin/Desktop/dashboard-app/src/redux/dashboardSlice.js"],"sourcesContent":["// src/redux/dashboardSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport dashboardData from '../data/dashboardData';\r\n\r\nconst dashboardSlice = createSlice({\r\n  name: 'dashboard',\r\n  initialState: dashboardData,\r\n  reducers: {\r\n    addWidget: (state, action) => {\r\n      const { categoryId, widget } = action.payload;\r\n      const category = state.categories.find(cat => cat.id === categoryId);\r\n      category.widgets.push(widget);\r\n    },\r\n    removeWidget: (state, action) => {\r\n      const { categoryId, widgetId } = action.payload;\r\n      const category = state.categories.find(cat => cat.id === categoryId);\r\n      category.widgets = category.widgets.filter(widget => widget.id !== widgetId);\r\n    },\r\n    updateWidget: (state, action) \r\n  },\r\n});\r\n\r\nexport const { addWidget, removeWidget } = dashboardSlice.actions;\r\nexport default dashboardSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AAEjD,MAAMC,cAAc,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAEH,aAAa;EAC3BI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEC,UAAU;QAAEC;MAAO,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC7C,MAAMC,QAAQ,GAAGL,KAAK,CAACM,UAAU,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKP,UAAU,CAAC;MACpEG,QAAQ,CAACK,OAAO,CAACC,IAAI,CAACR,MAAM,CAAC;IAC/B,CAAC;IACDS,YAAY,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEC,UAAU;QAAEW;MAAS,CAAC,GAAGZ,MAAM,CAACG,OAAO;MAC/C,MAAMC,QAAQ,GAAGL,KAAK,CAACM,UAAU,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKP,UAAU,CAAC;MACpEG,QAAQ,CAACK,OAAO,GAAGL,QAAQ,CAACK,OAAO,CAACI,MAAM,CAACX,MAAM,IAAIA,MAAM,CAACM,EAAE,KAAKI,QAAQ,CAAC;IAC9E,CAAC;IACDE,YAAY,GAAGf,KAAK,EAAEC,MAAM;EAC9B;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,SAAS;EAAEa;AAAa,CAAC,GAAGjB,cAAc,CAACqB,OAAO;AACjE,eAAerB,cAAc,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}